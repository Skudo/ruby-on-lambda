require 'aws-sdk-core'
require 'fileutils'

def user_credentials
  credentials_path = File.join(ENV['HOME'], '.aws', 'credentials')
  shared_credentials = Aws::SharedCredentials.new(path: credentials_path)
  credentials = shared_credentials.credentials

  {
    aws_access_key_id: ENV['AWS_ACCESS_KEY_ID'] || credentials.access_key_id,
    aws_secret_access_key: ENV['AWS_SECRET_ACCESS_KEY'] || credentials.secret_access_key
  }
end

def deploy_commands
  [
    "cp -a #{src_folder} /tmp/",
    "cd /tmp/#{name}",
    'bundle --path vendor/bundle --without development test',
    'sls deploy -v'
  ]
end

def docker_image
  "#{name}-builder"
end

def docker_image_exist?
  system("docker image inspect #{docker_image} > /dev/null")
end

def docker_params
  credentials_params = user_credentials.map do |key, value|
    "-e #{key.upcase}=#{value}"
  end

  [
    *credentials_params,
    '--rm',
    "-v #{project_folder}:#{src_folder}"
  ]
end

def name
  File.basename(project_folder)
end

def project_folder
  File.expand_path(__dir__)
end

def sh(command)
  puts command
  system(command)
end

def src_folder
  "/src/#{name}"
end

namespace :docker do
  task :build do
    sh("cd #{project_folder} && docker build . -t #{docker_image}")
  end
end

task :deploy do
  Rake::Task['docker:build'].invoke unless docker_image_exist?

  command = "docker run #{docker_params.join(' ')} #{docker_image} " +
            %(/bin/bash -c "#{deploy_commands.join(' && ')}")
  sh(command)
end
